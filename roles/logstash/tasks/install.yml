- name: debug hostvars
  debug: log="{{hostvars}}"
  ignore_errors: yes
  

- name: debug hostvars.localhost.elb_info
  debug: msg="{{hostvars.localhost.elb_info}}"
  ignore_errors: yes
  when: hostvars.localhost.elb_info is defined
  
  
- name: debug hostvars.localhost.elb_info.elb
  debug: msg="{{hostvars.localhost.elb_info.elb}}"
  ignore_errors: yes
  when: hostvars.localhost.elb_info.elb is defined
  
- name: debug hostvars.localhost.elb_info.elb.dns_name
  debug: msg="{{hostvars.localhost.elb_info.elb.dns_name}}"
  register: elb_dns_name
  
  
  
- name: debug elb_dns_name
  debug: msg="{{elb_dns_name}}"


#- name: debug localhost
#  debug: msg="{{elb_info}}"
#  when: elb_info is defined
#  ignore_errors: yes
  
#- name: debug elb1
#  debug: msg="{{elb1}}"
#  when: elb1 is defined
#  ignore_errors: yes
  
#- name: debug elb2
#  debug: msg="{{elb2}}"
#  when: elb2 is defined
#  ignore_errors: yes
  
#- name: log elb_info.elb.dns_name
#  debug: msg="{{elb_info.elb.dns_name}}"
#  when: elb_info is defined
#  ignore_errors: yes
  
  

- name: debug hostvars.localhost.elb_info.elb.dns_name
  debug: msg="{{hostvars.localhost.elb_info.elb.dns_name}}"
  
- name: yum upgrade all packages
  yum: name=* state=latest
  sudo: yes
  with_items: "{{ec2_details.results}}"
 
- name: Download Logstash rpm
  get_url: url={{package_url}} dest=/tmp/{{file_name}} force=yes validate_certs=no
  with_items: "{{ec2_details.results}}"
  
- name: Make log dir
  file: path="{{log_dir}}" state="directory"
  with_items: "{{ec2_details.results}}"
  
- name: add uname to /etc/hosts
  shell: "echo \"127.0.0.1 `uname -n`\" >> /etc/hosts"
  
- name: Install Logstash
  yum: name="/tmp/{{file_name}}"
  with_items: "{{ec2_details.results}}"
  
- name: Delete Logstash rpm
  file: path="/tmp/{{file_name}}" state="absent"
  with_items: "{{ec2_details.results}}"
  
- name: Load config file logstash.conf with proper values
  template: src="logstash.conf.yml" dest="/etc/logstash/conf.d/logstash.conf"
  with_items: "{{ec2_details.results}}"
    


- name: Restart Logstash
  action: service name=logstash state=restarted
  with_items: "{{ec2_details.results}}"
